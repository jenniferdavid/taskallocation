#! /usr/bin/env python
# -*- coding: utf-8 -*-

"""ROS action client CLI tool."""

import rospy
import argparse
import rosaction

__author__ = "Anass Al-Wohoush"


def print_action_list(args):
    """Prints list of registered ROS actions.

    Args:
        args: Namespace from parsed command-line arguments.
    """
    for action in rosaction.get_action_list():
        print(action)


def send_action_goal(args):
    """Sends ROS action goal and prints feedback and result.

    Args:
        args: Namespace from parsed command-line arguments.
    """
    client = rosaction.create_action_client(args.action)
    client.wait_for_server()


    goal = rosaction.create_goal_from_yaml(args.action, args.msg)
    client.send_goal(
        goal,
        done_cb=print_result,
        feedback_cb=print_feedback)

    def cancel_on_shutdown():
        # Try to preempt.
        client.cancel_goal()

        # Wait until preempted.
        client.wait_for_result()

    # Preempt on Ctrl-C.
    rospy.on_shutdown(cancel_on_shutdown)

    # Wait until over.
    client.wait_for_result()


def print_feedback(feedback):
    """Prints ROS action feedback.

    Args:
        feedback: ROS action feedback.
    """
    print(feedback)
    print("---")


def print_result(status, result):
    """Prints ROS action result.

    Args:
        status: ROS action status.
        result: ROS action result.
    """
    print(rosaction.stringify_status(status))
    print("---")
    print(result)


def run():
    """Parses command-line arguments and runs corresponding command."""
    # Create main parsers.
    parser = argparse.ArgumentParser()
    subparsers = parser.add_subparsers()

    # Setup 'rosaction list' command.
    list_parser = subparsers.add_parser("list")
    list_parser.set_defaults(func=print_action_list)

    # Setup 'rosaction send' command.
    send_parser = subparsers.add_parser("send")
    send_parser.add_argument("action")
    send_parser.add_argument("msg")
    send_parser.set_defaults(func=send_action_goal)

    # Parse command-line arguments.
    args = parser.parse_args()

    # Run corresponding command.
    args.func(args)


if __name__ == "__main__":
    rospy.init_node("rosaction", anonymous=True)
    run()
